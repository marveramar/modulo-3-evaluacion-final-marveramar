{"version":3,"sources":["stylesheet/images/logoHeader.png","stylesheet/images/rick-morty-season-4-release-date.png","components/CharacterCard.js","components/CharacterList.js","components/Filter.js","components/CharacterDetail.js","components/Header.js","components/App.js","services/Api.js","index.js"],"names":["module","exports","CharacterCard","props","character","name","species","image","className","src","alt","CharacterList","characters","filter","value","toLowerCase","includes","searching","map","key","id","to","Filter","handleOnChange","bind","e","target","this","htmlFor","type","onChange","React","Component","CharacterDetail","status","origin","episode","Fragment","length","Header","icon","logoHeader","App","state","allCharacters","renderDetail","fetch","then","response","json","data","setState","results","routeId","match","params","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e8ddf3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoHeader.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/rick-morty-season-4-release-date.e0289c46.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n    const { name, species, image } = props.character\n    return (\n        <div className=\"card\" >\n            <h3>{name}</h3>\n            <p>{species}</p>\n            <img className=\"card__img\" src={image} alt={name} />\n        </div>\n    )\n}\nCharacterCard.propTypes = {\n    name: PropTypes.string,\n    species: PropTypes.string,\n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n    return (\n        <ul className=\"list\">\n            {props.characters\n                .filter(character => props.value === '' || character.name.toLowerCase().includes(props.searching))\n                .map((character) =>\n                    <li key={character.id}>\n                        <Link to={`/character/${character.id}`}>\n                            <CharacterCard\n                                character={character}\n                            />\n                        </Link>\n                    </li>\n                )}\n        </ul>\n    )\n}\nCharacterList.propTypes = {\n    characters: PropTypes.array,\n}\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleOnChange = this.handleOnChange.bind(this);\n    }\n    handleOnChange(e) {\n        let searching = e.target.value\n        this.props.handleOnChange(searching)\n    }\n    render() {\n        return (\n            <form className=\"form\" >\n                <label className=\"form__label\" htmlFor=\"inputSearch\">Search</label>\n                <input className=\"form__input\" name=\"inputSearch\" type=\"text\" value={this.props.value} onChange={this.handleOnChange} />\n            </form>\n        )\n    }\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n}\n\nexport default Filter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = (props) => {\n    const { name, species, image, status, origin, episode } = props.character\n    return (\n        <React.Fragment>\n            <Link className=\"back\" to=\"/\"> > Volver</Link>\n            <div className=\"detail\">\n                <div className=\"detail__description\">\n                    <h2 className=\"detail__name\">~{name}~</h2>\n                    <p>Specie: {species}</p>\n                    <p>Origin: {origin.name}</p>\n                    <p>Number of episodes: {episode.length}</p>\n                    <p>Status: {status === 'Dead' ? status + ' üíÄ' : status === 'Alive' ? status + ' üíÉ' : status + '‚ùì'}</p>\n                </div>\n                <img className=\"detail__img\" src={image} alt={name} />\n\n            </div>\n        </React.Fragment>\n    )\n}\nCharacterDetail.propTypes = {\n    name: PropTypes.string,\n    species: PropTypes.string,\n    status: PropTypes.string,\n    origin: PropTypes.object,\n    episode: PropTypes.array\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport logoHeader from '../stylesheet/images/logoHeader.png';\nimport icon from '../stylesheet/images/rick-morty-season-4-release-date.png';\n\nconst Header = () => <div className=\"header\"> <img className=\"head\" src={icon} alt=\"icon head morty\" /> <img className=\"header__img\" src={logoHeader} alt=\"logo web\" /></div>;\n\nexport default Header;\n","\nimport React from 'react';\nimport { ApiFetch } from '../services/Api';\nimport CharacterList from './CharacterList';\nimport Filter from './Filter';\nimport { Switch, Route } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\nimport Header from './Header';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allCharacters: [],\n            value: '',\n            id: '',\n        }\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.renderDetail = this.renderDetail.bind(this);\n    }\n    componentDidMount() {\n        ApiFetch()\n            .then(data => {\n                this.setState({ allCharacters: data.results })\n            })\n    }\n    handleOnChange(searching) {\n        this.setState({ value: searching })\n\n    }\n    renderDetail(props) {\n        const routeId = props.match.params.id;\n        const characters = this.state.allCharacters\n        for (let character of characters) {\n\n            if (character.id == routeId) {\n                return (\n                    <CharacterDetail character={character} />)\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"main\">\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Filter\n                            handleOnChange={this.handleOnChange}\n                            value={this.state.value}\n                        />\n                        <CharacterList\n                            characters={this.state.allCharacters}\n                            searching={this.state.value} />\n                    </Route>\n                    <Route path=\"/character/:id\" render={this.renderDetail} />\n                </Switch>\n            </div >\n        )\n    }\n}\nexport default App;","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst ApiFetch = () => fetch(ENDPOINT).then(response => response.json())\n\nexport { ApiFetch };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheet/index.scss';\nimport './stylesheet/App.scss'\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}